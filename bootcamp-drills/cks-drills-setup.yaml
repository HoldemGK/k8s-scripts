apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: sample
spec: {}
status: {}
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: workloads
spec: {}
status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  name: pod-creator
  namespace: workloads
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  name: log-auditor
  namespace: workloads
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: create-pods
  namespace: workloads
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: get-pods
  namespace: workloads
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  name: pod-creator
  namespace: workloads
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: create-pods
subjects:
- kind: ServiceAccount
  name: pod-creator
  namespace: workloads
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  name: log-audit
  namespace: workloads
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: get-pods
subjects:
- kind: ServiceAccount
  name: log-auditor
  namespace: workloads
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: log-auditor-access
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: log-auditor
  namespace: workloads
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: external
spec: {}
status: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-svc-ingress
  namespace: external
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /testpath
        pathType: Prefix
        backend:
          service:
            name: frontend-svc
            port:
              number: 80
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: challenge-ns
spec: {}
status: {}
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: readers
spec: {}
status: {}
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: metadata-test
  name: metadata-test
  namespace: readers
spec:
  containers:
  - command:
    - /usr/bin/tail
    - -f
    - /dev/null
    image: giantswarm/tiny-tools
    name: metadata-test